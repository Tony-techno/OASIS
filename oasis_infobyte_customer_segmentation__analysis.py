# -*- coding: utf-8 -*-
"""OASIS_Infobyte_Customer_Segmentation _Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SmqIltURmCGgCHfiA0eE26uz1cCxHOt6

#**Customer Segmentation  Analysis**

Data Collection
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
import seaborn as sns
import matplotlib.pyplot as plt

ifood = pd.read_csv('/content/ifood_df.csv')

"""Data Exploration and Cleaning"""

print(ifood.info())

print(ifood.describe)

print(ifood.dtypes)

print(ifood.head())

print(ifood.tail())

print(ifood.isnull())

print(ifood.isnull().sum())

print(ifood.isnull().sum().sum())

"""Descriptive Statistics"""

# Calculating average purchase value and frequency of purchases
average_purchase_value = ifood['MntTotal'].mean()
frequency_of_purchases = ifood[['NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases']].sum(axis=1).mean()

print(f'Average Purchase Value: {average_purchase_value}')
print(f'Frequency of Purchases: {frequency_of_purchases}')

"""Customer Segmentation

Feature Selection and Scaling:
"""

features = ifood[['Income', 'Kidhome', 'Teenhome', 'Recency', 'MntWines', 'MntFruits',
                     'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts', 'MntGoldProds',
                     'NumDealsPurchases', 'NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases',
                     'NumWebVisitsMonth', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',
                     'AcceptedCmp2', 'Complain', 'Age', 'Customer_Days', 'MntTotal', 'MntRegularProds',
                     'AcceptedCmpOverall']]

"""Scaling the features"""

scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

"""Applying K-Means Clustering:"""

kmeans = KMeans(n_clusters=4, random_state=42)
kmeans_labels = kmeans.fit_predict(scaled_features)

"""Adding the cluster labels to the original dataframe"""

ifood['Cluster'] = kmeans_labels

silhouette_avg = silhouette_score(scaled_features, kmeans_labels)
print(f'Silhouette Score: {silhouette_avg}')

"""Visualization"""

selected_features = ['Income', 'MntWines', 'NumWebPurchases', 'NumStorePurchases', 'Age']
plt.figure(figsize=(15, 10))
for i, feature in enumerate(selected_features, 1):
    plt.subplot(3, 2, i)
    sns.boxplot(x='Cluster', y=feature, data=ifood)
    plt.title(f'Cluster Analysis of {feature}')
plt.tight_layout()
plt.show()

"""Insights and Recommendations"""

cluster_summary = ifood.groupby('Cluster').mean()
print(cluster_summary)

"""Recommendations based on insights:                                               
For instance, if Cluster 0 has high income and high wine purchases, consider targeted wine promotions for this group.
"""

# Example Insights:
for i in range(4):  # Assuming 4 clusters
    print(f"Cluster {i} Characteristics:")
    print(cluster_summary.loc[i])
    print()

"""Summary

The code performs a customer segmentation analysis for an ecommerce company. It begins by importing necessary libraries and reading a dataset containing customer information. The data exploration phase includes checking the datasetâ€™s structure, data types, and missing values, which are filled with median values. Descriptive statistics such as average purchase value and purchase frequency are calculated. For customer segmentation, relevant features are selected and scaled using StandardScaler. The K-Means clustering algorithm is applied to segment customers into four clusters, and the silhouette score is computed to evaluate the clustering quality. Visualizations, including box plots, are created to illustrate the characteristics of each cluster based on selected features. Finally, the mean values of each feature for each cluster are calculated and printed, providing insights and recommendations for targeted marketing strategies based on the identified customer segments.*italicized text*
"""